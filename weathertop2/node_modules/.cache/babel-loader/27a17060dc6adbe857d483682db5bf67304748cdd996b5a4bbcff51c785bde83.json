{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scmacdon\\\\git\\\\weathertop2\\\\src\\\\components\\\\LanguageBreakdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LanguageBreakdown() {\n  _s();\n  const [breakdowns, setBreakdowns] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchBreakdowns = async () => {\n      try {\n        const response = await fetch('https://i1niiwt027.execute-api.us-east-1.amazonaws.com/prod/stats');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setBreakdowns(data);\n      } catch (error) {\n        console.error('Error fetching language breakdown:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBreakdowns();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-2xl shadow-lg p-6 border border-gray-200\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-gray-800 flex items-center\",\n        children: \"\\uD83E\\uDDEA Test Breakdown by Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 italic\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-2xl shadow-lg p-6 border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4 text-gray-800 flex items-center\",\n      children: \"\\uD83E\\uDDEA Test Breakdown by Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), breakdowns.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-3 text-lg text-gray-700\",\n      children: breakdowns.map((lang, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"flex justify-between border-b pb-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: lang.Language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [lang.TotalTests, \" tests \\u2013 \", lang.PassRate, \"% pass\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 italic\",\n      children: \"No language data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(LanguageBreakdown, \"6tnCXxczPRXKiu5mLunHckCrXjM=\");\n_c = LanguageBreakdown;\nexport default LanguageBreakdown;\nvar _c;\n$RefreshReg$(_c, \"LanguageBreakdown\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LanguageBreakdown","_s","breakdowns","setBreakdowns","loading","setLoading","fetchBreakdowns","response","fetch","ok","Error","data","json","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","lang","idx","Language","TotalTests","PassRate","_c","$RefreshReg$"],"sources":["C:/Users/scmacdon/git/weathertop2/src/components/LanguageBreakdown.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction LanguageBreakdown() {\r\n  const [breakdowns, setBreakdowns] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchBreakdowns = async () => {\r\n      try {\r\n        const response = await fetch('https://i1niiwt027.execute-api.us-east-1.amazonaws.com/prod/stats');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setBreakdowns(data);\r\n      } catch (error) {\r\n        console.error('Error fetching language breakdown:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchBreakdowns();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-200\">\r\n        <h2 className=\"text-2xl font-semibold mb-4 text-gray-800 flex items-center\">\r\n          ðŸ§ª Test Breakdown by Language\r\n        </h2>\r\n        <p className=\"text-gray-500 italic\">Loading...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-2xl shadow-lg p-6 border border-gray-200\">\r\n      <h2 className=\"text-2xl font-semibold mb-4 text-gray-800 flex items-center\">\r\n        ðŸ§ª Test Breakdown by Language\r\n      </h2>\r\n      {breakdowns.length > 0 ? (\r\n        <ul className=\"space-y-3 text-lg text-gray-700\">\r\n          {breakdowns.map((lang, idx) => (\r\n            <li key={idx} className=\"flex justify-between border-b pb-1\">\r\n              <span>{lang.Language}</span>\r\n              <span>\r\n                {lang.TotalTests} tests â€“ {lang.PassRate}% pass\r\n              </span>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p className=\"text-gray-500 italic\">No language data available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LanguageBreakdown;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}