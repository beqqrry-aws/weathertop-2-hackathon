{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scmacdon\\\\git\\\\weathertop2\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useContext } from 'react';\nimport TestConfig from './components/TestConfig';\nimport ExecutionControl from './components/ExecutionControl';\nimport TestDashboard from './components/TestDashboard';\nimport './styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nfunction App() {\n  _s();\n  const [status, setStatus] = useState('Idle');\n  const [logs, setLogs] = useState([]);\n  const [theme, setTheme] = useState('dark'); // Dark theme by default\n\n  const handleRun = () => {\n    setStatus('Running');\n    setLogs(['Java Passed', 'Python Running']);\n  };\n  const handleStop = () => {\n    setStatus('Stopped');\n    setLogs([]);\n  };\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'dark' ? 'light' : 'dark');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app-container ${theme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"app-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-title\",\n          children: \"Weathertop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"theme-toggle\",\n          onClick: toggleTheme,\n          children: [\"Switch to \", theme === 'dark' ? 'Light' : 'Dark', \" Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(TestConfig, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ExecutionControl, {\n            onRun: handleRun,\n            onStop: handleStop\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: /*#__PURE__*/_jsxDEV(TestDashboard, {\n            status: status,\n            logs: logs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mg0JEjs90UAaTg1sLfdvSQIxxv0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","createContext","useContext","TestConfig","ExecutionControl","TestDashboard","jsxDEV","_jsxDEV","ThemeContext","App","_s","status","setStatus","logs","setLogs","theme","setTheme","handleRun","handleStop","toggleTheme","prev","Provider","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onRun","onStop","_c","$RefreshReg$"],"sources":["C:/Users/scmacdon/git/weathertop2/src/App.js"],"sourcesContent":["import React, { useState, createContext, useContext } from 'react';\nimport TestConfig from './components/TestConfig';\nimport ExecutionControl from './components/ExecutionControl';\nimport TestDashboard from './components/TestDashboard';\nimport './styles/styles.css';\n\nexport const ThemeContext = createContext();\n\nfunction App() {\n  const [status, setStatus] = useState('Idle');\n  const [logs, setLogs] = useState([]);\n  const [theme, setTheme] = useState('dark'); // Dark theme by default\n\n  const handleRun = () => {\n    setStatus('Running');\n    setLogs(['Java Passed', 'Python Running']);\n  };\n\n  const handleStop = () => {\n    setStatus('Stopped');\n    setLogs([]);\n  };\n\n  const toggleTheme = () => {\n    setTheme(prev => (prev === 'dark' ? 'light' : 'dark'));\n  };\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <div className={`app-container ${theme}`}>\n        <header className=\"app-header\">\n          <h1 className=\"app-title\">Weathertop</h1>\n          <button className=\"theme-toggle\" onClick={toggleTheme}>\n            Switch to {theme === 'dark' ? 'Light' : 'Dark'} Mode\n          </button>\n        </header>\n        <div className=\"dashboard\">\n          <div className=\"column\">\n            <TestConfig />\n            <ExecutionControl onRun={handleRun} onStop={handleStop} />\n          </div>\n          <div className=\"column\">\n            <TestDashboard status={status} logs={logs} />\n          </div>\n        </div>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}